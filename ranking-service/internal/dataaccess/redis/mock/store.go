// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/minhhoanq/video-realtime-ranking/ranking-service/internal/dataaccess/redis (interfaces: RankingDataAccessor)

// Package mockrd is a generated GoMock package.
package mockrd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	redis "github.com/redis/go-redis/v9"
)

// MockRankingDataAccessor is a mock of RankingDataAccessor interface.
type MockRankingDataAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockRankingDataAccessorMockRecorder
}

// MockRankingDataAccessorMockRecorder is the mock recorder for MockRankingDataAccessor.
type MockRankingDataAccessorMockRecorder struct {
	mock *MockRankingDataAccessor
}

// NewMockRankingDataAccessor creates a new mock instance.
func NewMockRankingDataAccessor(ctrl *gomock.Controller) *MockRankingDataAccessor {
	mock := &MockRankingDataAccessor{ctrl: ctrl}
	mock.recorder = &MockRankingDataAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRankingDataAccessor) EXPECT() *MockRankingDataAccessorMockRecorder {
	return m.recorder
}

// GetScore mocks base method.
func (m *MockRankingDataAccessor) GetScore(arg0 context.Context, arg1, arg2 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScore", arg0, arg1, arg2)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScore indicates an expected call of GetScore.
func (mr *MockRankingDataAccessorMockRecorder) GetScore(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScore", reflect.TypeOf((*MockRankingDataAccessor)(nil).GetScore), arg0, arg1, arg2)
}

// GetTopRanked mocks base method.
func (m *MockRankingDataAccessor) GetTopRanked(arg0 context.Context, arg1 string, arg2, arg3 int64) ([]redis.Z, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopRanked", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]redis.Z)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopRanked indicates an expected call of GetTopRanked.
func (mr *MockRankingDataAccessorMockRecorder) GetTopRanked(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopRanked", reflect.TypeOf((*MockRankingDataAccessor)(nil).GetTopRanked), arg0, arg1, arg2, arg3)
}
